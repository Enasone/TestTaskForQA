plugins {
    id 'java'
    id("io.qameta.allure") version "2.11.2"

}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {

    // ==== junit

    implementation "org.junit.jupiter:junit-jupiter-api:5.9.2"
    implementation "org.junit.jupiter:junit-jupiter-engine:5.9.2"
    implementation "org.junit.jupiter:junit-jupiter-params:5.9.2"
    testImplementation("org.junit.platform:junit-platform-suite")
    testImplementation("org.junit.jupiter:junit-jupiter")

    // https://mvnrepository.com/artifact/io.cucumber
    implementation 'io.cucumber:cucumber-java:7.13.0'
    implementation 'io.cucumber:cucumber-core:7.13.0'
    testImplementation 'io.cucumber:cucumber-junit:7.13.0'
    testImplementation("io.cucumber:cucumber-junit-platform-engine")


    // https://mvnrepository.com/artifact/org.assertj/assertj-core
    implementation group: 'org.assertj', name: 'assertj-core', version: '3.24.2'

    // https://mvnrepository.com/artifact/io.rest-assured/rest-assured
    implementation group: 'io.rest-assured', name: 'rest-assured', version: '5.3.0'

    // https://mvnrepository.com/artifact/org.projectlombok/lombok
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    testImplementation(platform("org.junit:junit-bom:5.10.0"))
    testImplementation(platform("io.cucumber:cucumber-bom:7.14.0"))

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.15.2'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.15.2'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.15.2'

    // https://mvnrepository.com/artifact/io.qameta.allure/allure-junit5
    testImplementation 'io.qameta.allure:allure-assertj:2.12.1'
    testImplementation 'io.qameta.allure:allure-rest-assured:2.12.1'
    testImplementation 'io.qameta.allure:allure-java-commons:2.12.1'
    testImplementation 'org.aspectj:aspectjweaver:1.9.5'
    testImplementation 'io.qameta.allure:allure-junit5:2.12.1'
    testImplementation 'io.qameta.allure:allure-commandline:2.12.1'
    implementation 'io.qameta.allure:allure-cucumber7-jvm:2.21.0'
    runtimeOnly 'io.cucumber:cucumber-junit-platform-engine:7.13.0'


    // https://mvnrepository.com/artifact/org.aspectj/aspectjweaver
    runtimeOnly 'org.aspectj:aspectjweaver:1.9.7'

}

test {
    useJUnitPlatform()
    systemProperties = System.properties
    systemProperties['file.encoding'] = "utf-8"
    systemProperties['org.aspectj.weaver.Dump.exception'] = false
    minHeapSize = "128m"
    maxHeapSize = "256m"
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

task cucumber() {
    dependsOn assemble, compileTestJava
    doLast {
        javaexec {
            systemProperty("allure.results.directory", "build/allure-results")

            main = "io.cucumber.weatherstack"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty',
                    '--plugin', 'io.qameta.allure.cucumber7jvm.AllureCucumber7Jvm',
                    '--glue', 'stepdefs', 'src/test/resources']
        }
    }
}